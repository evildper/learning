<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9FCA3E75-C8D1-331C-8C45-5C1FA9BBA463}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\2a1204ff3f6e26296c1ba9566773c399\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/code/learning/github/learning/0_cpp_warmup/samples -BE:/code/learning/github/learning/0_cpp_warmup/samples --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/learning/github/learning/0_cpp_warmup/samples/CppPractices.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeSystem.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\cmake\helper.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/code/learning/github/learning/0_cpp_warmup/samples -BE:/code/learning/github/learning/0_cpp_warmup/samples --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/learning/github/learning/0_cpp_warmup/samples/CppPractices.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeSystem.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\cmake\helper.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/code/learning/github/learning/0_cpp_warmup/samples -BE:/code/learning/github/learning/0_cpp_warmup/samples --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/learning/github/learning/0_cpp_warmup/samples/CppPractices.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeSystem.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\cmake\helper.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/code/learning/github/learning/0_cpp_warmup/samples -BE:/code/learning/github/learning/0_cpp_warmup/samples --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/learning/github/learning/0_cpp_warmup/samples/CppPractices.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\3.28.2\CMakeSystem.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\cmake\helper.cmake;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeLists.txt;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\code\learning\github\learning\0_cpp_warmup\samples\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\shared\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\libraries\static\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\1_BasicDArray_withSmartPointer\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\2_EfficientDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\3_TemplateDArray\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\4_list_Polynomial\CMakeFiles\generate.stamp;E:\code\learning\github\learning\0_cpp_warmup\samples\src\executables\5_map_Polynomial\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>